// <auto-generated />
using System;
using Biblioteca.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Biblioteca.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230623193908_InitialMigrate")]
    partial class InitialMigrate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Biblioteca.Models.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nacionalidad_Autor")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre_Autores")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("Biblioteca.Models.Docente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FacultadDocente")
                        .HasColumnType("longtext");

                    b.Property<string>("NombreDocente")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Docentes");
                });

            modelBuilder.Entity("Biblioteca.Models.Editorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Contacto_Editorial")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre_Editorial")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono_Editorial")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Editoriales");
                });

            modelBuilder.Entity("Biblioteca.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion_Genero")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre_Genero")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("Biblioteca.Models.Libros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AutorId")
                        .HasColumnType("int");

                    b.Property<int>("Autor_Id")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion_Libro")
                        .HasColumnType("longtext");

                    b.Property<int?>("EditorialId")
                        .HasColumnType("int");

                    b.Property<int>("Editorial_Id")
                        .HasColumnType("int");

                    b.Property<int>("Existencias_Libro")
                        .HasColumnType("int");

                    b.Property<int?>("GeneroId")
                        .HasColumnType("int");

                    b.Property<int>("Genero_Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_Libro")
                        .HasColumnType("longtext");

                    b.Property<float>("Precio_Libro")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("EditorialId");

                    b.HasIndex("GeneroId");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("Biblioteca.Models.Prestamo", b =>
                {
                    b.Property<string>("Codigo_Prestamo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descripcion_Prestamo")
                        .HasColumnType("longtext");

                    b.Property<int?>("DocenteId")
                        .HasColumnType("int");

                    b.Property<int>("Docete_Id")
                        .HasColumnType("int");

                    b.Property<string>("Fecha_Prestamo")
                        .HasColumnType("longtext");

                    b.Property<int?>("LibrosId")
                        .HasColumnType("int");

                    b.Property<int>("Libros_Id")
                        .HasColumnType("int");

                    b.HasKey("Codigo_Prestamo");

                    b.HasIndex("DocenteId");

                    b.HasIndex("LibrosId");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("Biblioteca.Models.Libros", b =>
                {
                    b.HasOne("Biblioteca.Models.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorId");

                    b.HasOne("Biblioteca.Models.Editorial", "Editorial")
                        .WithMany()
                        .HasForeignKey("EditorialId");

                    b.HasOne("Biblioteca.Models.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId");

                    b.Navigation("Autor");

                    b.Navigation("Editorial");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("Biblioteca.Models.Prestamo", b =>
                {
                    b.HasOne("Biblioteca.Models.Docente", "Docente")
                        .WithMany()
                        .HasForeignKey("DocenteId");

                    b.HasOne("Biblioteca.Models.Libros", "Libros")
                        .WithMany()
                        .HasForeignKey("LibrosId");

                    b.Navigation("Docente");

                    b.Navigation("Libros");
                });
#pragma warning restore 612, 618
        }
    }
}
